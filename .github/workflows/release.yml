# .github/workflows/release.yml
# üöÄ RELEASE ENGINE
# Creates a GitHub Release on tag push (v*, semver-ish), with autogenerated notes.
# If build artifacts exist (dist/, build/, out/, target/release, bin/), they are zipped and attached.

name: release

on:
  push:
    tags:
      - 'v*'         # e.g., v0.1.0, v1.2.3, v2.0.0-rc.1
  workflow_dispatch:

permissions:
  contents: write   # required to create releases

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  github-release:
    name: üì¶ Publish ${{ github.ref_name }}
    runs-on: ubuntu-latest

    steps:
      - name: üßæ Checkout
        uses: actions/checkout@v5

      - name: üßÆ Derive release metadata
        id: meta
        run: |
          echo "TAG=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
          # Pre-release if tag contains a hyphen (e.g., v1.0.0-rc.1)
          if [[ "${GITHUB_REF_NAME}" == *-* ]]; then
            echo "PRERELEASE=true" >> $GITHUB_OUTPUT
          else
            echo "PRERELEASE=false" >> $GITHUB_OUTPUT
          fi

      - name: üìù Create GitHub Release (notes auto-generated)
        id: release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.meta.outputs.TAG }}
          name: ${{ steps.meta.outputs.TAG }}
          generate_release_notes: true
          draft: false
          prerelease: ${{ steps.meta.outputs.PRERELEASE }}

      - name: üì¶ Package optional artifacts
        id: pack
        run: |
          set -e
          shopt -s nullglob globstar
          candidates=(dist/** build/** out/** target/release/** bin/**)
          files=()
          for c in "${candidates[@]}"; do
            if [ -e "$c" ]; then files+=("$c"); fi
          done

          if [ ${#files[@]} -gt 0 ]; then
            echo "HAS_ASSETS=true" >> $GITHUB_OUTPUT
            echo "Found ${#files[@]} artifact paths. Creating archive‚Ä¶"
            zip -qr release-assets.zip dist build out target/release bin 2>/dev/null || true
            test -f release-assets.zip && ls -lh release-assets.zip
          else
            echo "HAS_ASSETS=false" >> $GITHUB_OUTPUT
            echo "No artifact directories found (dist/, build/, out/, target/release, bin/). Skipping upload."
          fi

      - name: ‚¨ÜÔ∏è Upload assets archive
        if: steps.pack.outputs.HAS_ASSETS == 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: release-assets.zip
          asset_name: ${{ github.ref_name }}-assets.zip
          asset_content_type: application/zip

      - name: üîö Summary
        run: |
          echo "Tag:        ${{ steps.meta.outputs.TAG }}"
          echo "Prerelease: ${{ steps.meta.outputs.PRERELEASE }}"
          echo "Assets:     ${{ steps.pack.outputs.HAS_ASSETS }}"
